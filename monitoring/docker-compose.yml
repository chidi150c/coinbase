version: "3.9"

services:
  bridge_hitbtc:
    image: ghcr.io/${GHCR_NS:-chidi150c}/coinbase-bridge-hitbtc:${IMAGE_SHA}
    container_name: bridge_hitbtc
    env_file:
      - /opt/coinbase/env/hitbtc.env   # includes PORT, STALE_MS, optional SYMBOL
    ports:
      - "8788:8788"
    networks:
      - monitoring_network
    restart: unless-stopped

  bridge_binance:
    image: ghcr.io/${GHCR_NS:-chidi150c}/coinbase-bridge-binance:${IMAGE_SHA}
    container_name: bridge_binance
    env_file:
      - /opt/coinbase/env/binance.env  # includes PORT, STALE_MS, optional SYMBOL
    ports:
      - "8789:8789"
    networks:
      - monitoring_network
    restart: unless-stopped

  bridge:
    image: ghcr.io/${GHCR_NS:-chidi150c}/coinbase-bridge:${IMAGE_SHA:-latest}
    command: uvicorn bridge.app:app --host 0.0.0.0 --port 8787
    env_file:
      - /opt/coinbase/env/bridge.env
    environment:
      BRIDGE_BASE_STEP: "0.00000001"   # optional
      BRIDGE_TICK_SIZE: "0.01"         # optional
    ports:
      - "8787:8787"
    networks:
      monitoring_network:
        aliases: [bridge]
    restart: unless-stopped

  bot_hitbtc:
    depends_on: [bridge_hitbtc]
    image: ghcr.io/${GHCR_NS:-chidi150c}/coinbase-bot:${IMAGE_SHA}
    command: ["-live", "-interval", "1"]
    volumes:
      - /opt/coinbase/env:/opt/coinbase/env:ro
      - /opt/coinbase/state:/opt/coinbase/state
    env_file:
      - /opt/coinbase/env/bot_hitbtc.env
    restart: unless-stopped
    expose:
      - "8080"
    healthcheck:
      test: ["NONE"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      monitoring_network:
        aliases: [bot-hitbtc]

  bot_binance:
    depends_on: [bridge_binance]
    image: ghcr.io/${GHCR_NS:-chidi150c}/coinbase-bot:${IMAGE_SHA}
    command: ["-live", "-interval", "1"]
    volumes:
      - /opt/coinbase/env:/opt/coinbase/env:ro
      - /opt/coinbase/state:/opt/coinbase/state
    env_file:
      - /opt/coinbase/env/bot_binance.env
    restart: unless-stopped
    expose:
      - "8080"
    healthcheck:
      test: ["NONE"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      monitoring_network:
        aliases: [bot-binance]

  bot:
    depends_on: [bridge]
    image: ghcr.io/${GHCR_NS:-chidi150c}/coinbase-bot:${IMAGE_SHA}
    command: ["-live", "-interval", "1"]
    volumes:
      - /opt/coinbase/env:/opt/coinbase/env:ro
      - /opt/coinbase/state:/opt/coinbase/state
    env_file:
      - /opt/coinbase/env/bot_coinbase.env
    restart: unless-stopped
    expose:
      - "8080"
    healthcheck:
      test: ["NONE"]   # distroless image: no shell/curl inside
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      monitoring_network:
        aliases: [bot, coinbase-bot]

  prometheus:
    image: prom/prometheus:latest
    ports: ["9090:9090"]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - monitoring_prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.retention.size=2GB
    restart: unless-stopped
    networks: [monitoring_network]

  alertmanager:
    image: prom/alertmanager:latest
    ports: ["9093:9093"]
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    restart: unless-stopped
    networks: [monitoring_network]

  grafana:
    image: grafana/grafana:latest
    ports: ["3000:3000"]
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - monitoring_grafana_data:/var/lib/grafana
    depends_on: [prometheus, bot, bridge]
    networks: [monitoring_network]

volumes:
  monitoring_prometheus_data:
  monitoring_grafana_data:
  coinbase_state:

networks:
  monitoring_network:
    driver: bridge
