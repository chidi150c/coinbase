name: Deploy (force replace)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: docker-compose.yml
      IMAGE_SHA: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SSH deploy (force replace)
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            cd "$DEPLOY_DIR"

            # fetch repo & write IMAGE_SHA env if your compose uses it
            if [ -d .git ]; then git fetch --all --prune; fi
            git reset --hard "${GITHUB_SHA:-${IMAGE_SHA}}"

            # Pull newest images (tagged by SHA or latest as defined in compose)
            docker compose -f "$COMPOSE_FILE" pull

            # Hard replace: stop & remove old containers, then recreate
            docker compose -f "$COMPOSE_FILE" down --remove-orphans
            docker compose -f "$COMPOSE_FILE" rm -sf

            # Recreate everything with fresh containers
            IMAGE_SHA="${IMAGE_SHA}" docker compose -f "$COMPOSE_FILE" up -d --force-recreate

            # Optional: clean dangling images/containers
            docker system prune -f
