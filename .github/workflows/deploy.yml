name: Deploy to Linode

on:
  workflow_run:
    workflows: ["Build & Push Images"]
    types: [completed]
    branches: ["main"]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    concurrency:
      group: prod-deploy
      cancel-in-progress: false

    steps:
      - name: Prepare SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          install -m 700 -d ~/.ssh
          printf "%s" "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add host to known_hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Deploy (git sync + compose rollout)
        env:
          SSH_HOST:  ${{ secrets.SSH_HOST }}
          SSH_USER:  ${{ secrets.SSH_USER }}
          DEPLOY_DIR: ${{ vars.DEPLOY_DIR }}   # e.g. /home/chidi/coinbase/monitoring
          REPO_URL:  https://github.com/${{ github.repository }}.git
        run: |
          ssh -o StrictHostKeyChecking=yes "$SSH_USER@$SSH_HOST" bash -s -- "$DEPLOY_DIR" "$REPO_URL" <<'EOF'
          set -euo pipefail
          DEPLOY_DIR="${1:-/home/chidi/coinbase/monitoring}"
          REPO_URL="$2"
          REPO_DIR="$(dirname "$DEPLOY_DIR")"

          if [ ! -d "$REPO_DIR/.git" ]; then
            mkdir -p "$REPO_DIR"
            git clone "$REPO_URL" "$REPO_DIR"
          else
            git -C "$REPO_DIR" remote set-url origin "$REPO_URL"
            git -C "$REPO_DIR" fetch --all
            git -C "$REPO_DIR" reset --hard origin/main
          fi

          cd "$DEPLOY_DIR"
          docker compose up -d --pull=always --force-recreate
          docker image prune -f
          EOF
